import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
const _excluded = ["getFound"];
import React from 'react';
import { shallowEqual, useSelector, useStore } from 'react-redux';
import createBaseRouter from './createBaseRouter';
import { jsx as _jsx } from "react/jsx-runtime";
export default function createConnectedRouter(_ref) {
  let {
      getFound = ({
        found
      }) => found
    } = _ref,
    options = _objectWithoutPropertiesLoose(_ref, _excluded);
  const Router = createBaseRouter(options);
  const getFoundState = state => {
    const {
      match,
      resolvedMatch
    } = getFound(state);
    return {
      match,
      resolvedMatch
    };
  };
  function ConnectedRouter(props) {
    const store = useStore();
    const foundState = useSelector(getFoundState, shallowEqual);
    return /*#__PURE__*/_jsx(Router, Object.assign({}, props, foundState, {
      store: store
    }));
  }
  return ConnectedRouter;
}